name: OpenTofu Workflow
run-name: ${{ github.event.inputs.Action }} ${{ github.event.inputs.Environment }} Infrastructure ${{ github.event.inputs.target_module != '' && github.event.inputs.target_module || null}}
on:
  workflow_dispatch:
    inputs:
      Environment:
        type: choice
        description: which environment ?
        options:
          - Lower
          - Higher
      Action:
        type: choice
        description: which action ?
        options:
          - plan
          - apply
          - destroy
      Skip_Checkov:
        type: boolean
        description: "Skip Checkov scan"
        default: true
      target_module:
        description: "Enter a target module"
        required: false
        default: ""
      continue:
        type: choice
        description: "Continue applying Opentofu for the rest of the module in case there is target modules"
        required: false
        options:
          - "true"
          - "false"
        default: "false"
env:
  TARGET_MODULE: ${{ github.event.inputs.target_module }}
permissions:
      id-token: write   # This is required for requesting the JWT
      contents: read    # This is required for actions/checkout
jobs:
  Opentofu_Workflow:
    runs-on: arc-scale-set
    environment: ${{ github.event.inputs.Environment }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: configure aws credentials
        uses: VFGroup-VBIT/vbitdc-opf-actions/aws/install-cli-action@main
        with:
          role-to-assume: arn:aws:iam::${{ vars.AWS_ACCOUNT_ID }}:role/Github-Runners-Access
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: eu-west-1

      - id: private-modules
        uses: VFGroup-VBIT/vbitdc-opf-actions/private-modules@main
        with:
          org: VFGroup-VBIT
          token: ${{ secrets.TOKEN }}

      - name: Cache Terraform modules
        uses: actions/cache@v4
        with:
          path: "**/.terraform"
          key: ${{ runner.os }}-${{ hashFiles('**/terraform.lock') }}

      - name: OpenTofu Init
        uses: VFGroup-VBIT/vbitdc-opf-actions/opentofu/install-cli-and-init@main
        with:
          backend_config_file: "${{ github.event.inputs.Environment }}_backend.hcl"

      - name: Checkov Terraform Scan
        uses: VFGroup-VBIT/vbitdc-opf-actions/checkov-scan@main
        with:
          tfvars_file_path: "./Config/${{ github.event.inputs.Environment }}.tfvars"
          github_token: ${{ secrets.TOKEN }}
        if: ${{ github.event.inputs.Skip_Checkov != 'true' }}

      - name: Opentofu Plan
        uses: VFGroup-VBIT/vbitdc-opf-actions/opentofu/plan@main
        with:
          target_modules: ${{ env.TARGET_MODULE }}
          tfvars_file_path: "./Config/${{ github.event.inputs.Environment }}.tfvars"
          continue: ${{ github.event.inputs.continue }}
        if: ${{ github.event.inputs.Action == 'plan' }}

      - name: Run Opentofu Apply
        uses: VFGroup-VBIT/vbitdc-opf-actions/opentofu/apply@main
        with:
          target_modules: ${{ env.TARGET_MODULE }}
          tfvars_file_path: "./Config/${{ github.event.inputs.Environment }}.tfvars"
          continue: ${{ github.event.inputs.continue }}
        if: ${{ github.event.inputs.Action == 'apply' }}

      # Handling PCS AMI Status during the scheduled workflow
      - name: Failed Notification
        uses: VFGroup-VBIT/vbitdc-opf-actions/teams-incoming-webhook-action@main
        if: ${{ failure() && github.actor == 'github-actions[bot]' }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          webhook-url: ${{ secrets.webhook_url }}
          deploy-card: true
          title: '${{ github.event.repository.name }} "Lower" failed during PCS AMI update.'
          color: "failure"

      - name: Checking Latest PCS AMI
        if: ${{ github.actor == 'github-actions[bot]' }}
        uses: VFGroup-VBIT/vbitdc-opf-actions/checking-latest-pcs-ami@main
        with:
          cluster-name: ${{ vars.CLUSTER_NAME }}
          webhook_url: ${{ secrets.webhook_url }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Run Opentofu Destroy
        uses: VFGroup-VBIT/vbitdc-opf-actions/opentofu/destroy@main
        with:
          target_modules: ${{ env.TARGET_MODULE }}
          tfvars_file_path: "./Config/${{ github.event.inputs.Environment }}.tfvars"
          continue: ${{ github.event.inputs.continue }}
        if: ${{ github.event.inputs.Action == 'destroy' }}
